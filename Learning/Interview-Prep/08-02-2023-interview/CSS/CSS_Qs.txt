
CSS:

1.Pseudo classes and elements
     Pseudo classes:
	https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements
	A pseudo-class is a selector that selects elements that are in a specific state, e.g. they are the first element of their type, or they are being hovered over by the mouse pointer. They tend to act as if you had applied a class to some part of your document, often helping you cut down on excess classes in your markup, and giving you more flexible, maintainable code
	Pseudo-classes are keywords that start with a colon. For example, (:hover & :first-child) are pseudo-classes.
		article p:first-child {
    				font-size: 120%;
    				font-weight: bold;}	
	-User-action pseudo classes
		:hover
		:focus
     Pseudo-elements:
	Pseudo-elements behave in a similar way. However, they act as if you had added a whole new HTML element into the markup, rather than applying a class to existing elements.
	Pseudo-elements start with a double colon :: , (::before) is an example of a pseudo-element.
	article p::first-line {
    		font-size: 120%;
    		font-weight: bold;} 
	It acts as if a <span> was magically wrapped around that first formatted line, and updated each time the line length changed
	article p:first-child::first-line {
  		font-size: 120%;
  		font-weight: bold;}

JS:

1.Arrow fn vs Normal fn
2.Map , filter, reduce methods
3.Call back and call back hell
4.Hoisting with example
5.Virtual dom vs real dom
6.Event loop , call stack, stack queue
7.promise, settimeout
8.this keyword
9.call, bind, apply

React:

1.Hooks
2.Pure component
3.Controlled vs uncontrolled component
4.what is heigher order component
5.problem drilling
6.passing data from child to parent vise versa
7.Redux
8.Life cycle hooks

Angular:

1.passing data from child to parent vise versa
2.Life cycle hooks
