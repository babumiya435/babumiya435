Implementation of Binary Trees
1. Binary Tree Program in C
//structure that contains data, address of the left child, and the address of the right child
struct node {
 int item;
 struct node* left;
 struct node* right;
};
 
// function to create a new node
struct node* createNode(int data) {
 
 //allocating space for new node
 struct node *node = (struct node *)malloc(sizeof(struct node));
 
 //inserting data in the node
 node->item = data;
  //setting left and right child as NULL
 node->left = NULL;
 node->right = NULL;
 
 return node;
}
 
// Insert to the left of the node
struct node* insertLeft(struct node* root, int value) {
 root->left = createNode(value);
 return root->left;
}
 
// Inserting to the right of the node
struct node* insertRight(struct node* root, int value) {
 root->right = createNode(value);
 return root->right;
}

2. Binary Tree Program in C++
// Binary Tree in C++
//structure that contains data, address of left child, address of the right child
struct Node {
 int data;
 struct node *left;
 struct node *right;
};
 
// function to create a new node
Node *newNode(int data) {
 //allocating space for the node
 Node *node = new Node;
 
 //storing in the data
 node->data = data;
  //setting left and right children to NULL
 node->left = NULL;
 node->right = NULL;
 return (node);
}

3. Binary Tree Program in Java
// Binary Tree in Java
 
// creating a node that holds the data, address of the left child, and the address of the right child
class Node {
 int key;
 Node left, right;
 
 //setting data in the node
 public Node(int item) {
   key = item;
   //setting left and right child equal to NULL
   left = right = null;
 }
}
 
class BinaryTree {
 Node root;
  //inserting data into the binary tree
 BinaryTree(int key) {
   root = new Node(key);
 }
 
 //set root NULL when the binary tree is created for the first time
 BinaryTree() {
   root = null;
 }
 
 public static void main(String[] args) {
 
   //creating a new instance of Binary Tree
   BinaryTree tree = new BinaryTree();
 
   //inserting into the binary tree
   tree.root = new Node(1);
   tree.root.left = new Node(2);
   tree.root.right = new Node(3);
 }
}

4. Binary Tree Program in Python
# Binary Tree in Python
 
# node that hold data, address of the left child, and address of the right child
class Node:
   def __init__(self, key):
       # setting left and right child equal to NULL
       self.left = None
       self.right = None
      
       # inserting data into the node
       self.val = key
 
root = Node(1)
root.left = Node(2)
root.right = Node(3)